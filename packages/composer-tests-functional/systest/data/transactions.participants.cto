/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace systest.transactions.participants

enum SimpleEnum {
    o WOW
    o SUCH
    o MANY
    o MUCH
}

participant SimpleStringParticipant identified by participantId {
    o String participantId
    o String stringValue
}

participant SimpleIntegerParticipant identified by participantId {
    o String participantId
    o Integer integerValue
}

participant SimpleRelationshipParticipant identified by participantId {
    o String participantId
    --> SimpleStringParticipant stringParticipant
}

participant SimpleRelationshipsParticipant identified by participantId {
    o String participantId
    --> SimpleStringParticipant[] stringParticipants
}

transaction SimpleTransactionWithPrimitiveTypes  {

    o String stringValue
    o Double doubleValue
    o Integer integerValue
    o Long longValue
    o DateTime dateTimeValue
    o Boolean booleanValue
    o SimpleEnum enumValue
}

transaction SimpleTransactionWithPrimitiveTypeArrays  {

    o String[] stringValues
    o Double[] doubleValues
    o Integer[] integerValues
    o Long[] longValues
    o DateTime[] dateTimeValues
    o Boolean[] booleanValues
    o SimpleEnum[] enumValues
}

transaction SimpleTransactionWithParticipants  {

    o SimpleStringParticipant stringParticipant
    o SimpleIntegerParticipant integerParticipant
}

transaction SimpleTransactionWithParticipantArrays  {

    o SimpleStringParticipant[] stringParticipants
    o SimpleIntegerParticipant[] integerParticipants
}

transaction SimpleTransactionWithParticipantRelationships  {

    --> SimpleStringParticipant stringParticipant
    --> SimpleIntegerParticipant integerParticipant
}

transaction SimpleTransactionWithParticipantRelationshipArrays  {

    --> SimpleStringParticipant[] stringParticipants
    --> SimpleIntegerParticipant[] integerParticipants
}

transaction GetAllParticipantsFromParticipantRegistryTransaction  {

}

transaction GetParticipantFromParticipantRegistryTransaction  {

}

transaction ExistsParticipantInParticipantRegistryTransaction  {

}

transaction AddParticipantInTransactionToParticipantRegistryTransaction  {

    o SimpleStringParticipant stringParticipant
}

transaction AddParticipantWithRelationshipInTransactionToParticipantRegistryTransaction  {

    o SimpleRelationshipParticipant relationshipParticipant
}

transaction AddNewParticipantToParticipantRegistryTransaction  {

}

transaction AddNewParticipantWithRelationshipToParticipantRegistryTransaction  {

}

transaction UpdateParticipantInTransactionInParticipantRegistryTransaction  {

    o SimpleStringParticipant stringParticipant
}

transaction UpdateParticipantWithRelationshipInTransactionInParticipantRegistryTransaction  {

    o SimpleRelationshipParticipant relationshipParticipant
}

transaction UpdateNewParticipantInParticipantRegistryTransaction  {

}

transaction UpdateNewParticipantWithRelationshipToParticipantRegistryTransaction  {

}

transaction RemoveParticipantInTransactionInParticipantRegistryTransaction  {

    o SimpleStringParticipant stringParticipant
}

transaction RemoveParticipantWithRelationshipInTransactionInParticipantRegistryTransaction  {

    o SimpleRelationshipParticipant relationshipParticipant
}

transaction RemoveNewParticipantInParticipantRegistryTransaction  {

}

transaction RemoveNewParticipantWithRelationshipInParticipantRegistryTransaction  {

}

transaction SingleAnnotatedTransaction  {

    o String stringValue
}

transaction MultipleAnnotatedTransaction  {

    o String stringValue1
    o String stringValue2
}

transaction TransactionUsingUtilityFunctions  {

    o String stringValue
}

transaction ParticipantAddIsAtomic  {

}

transaction ParticipantUpdateIsAtomic  {

}

transaction ParticipantRemoveIsAtomic  {

}
