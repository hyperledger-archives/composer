class BaseException extends Error {
   + void constructor(string) 
}
class BaseFileException extends BaseException {
   + void constructor(string,string,string) 
   + string getFileLocation() 
   + string getShortMessage() 
}
class BusinessNetworkDefinition {
   + String getIdentifier() 
   + BusinessNetworkMetadata getMetadata() 
   + String getName() 
   + String getVersion() 
   + String getDescription() 
   + Promise fromArchive(Buffer) 
   + Buffer toArchive(Object) 
   + Promise fromDirectory(String,Object,Object,boolean,boolean) 
   + Introspector getIntrospector() 
   + Factory getFactory() 
   + Serializer getSerializer() 
}
class BusinessNetworkMetadata {
   + String getREADME() 
   + object getPackageJson() 
   + String getName() 
   + String getDescription() 
   + String getVersion() 
   + String getIdentifier() 
}
class BusinessNetworkCardStore {
   + String getDefaultCardName(IdCard) 
   + Promise get(String) 
   + Promise put(String,IdCard) 
   + Promise has(String) 
   + Promise getAll() 
   + Promise delete(String) 
}
class Factory {
   + Resource newResource(String,String,String,Object,boolean,String,boolean,boolean) throws TypeNotFoundException
   + Resource newConcept(String,String,Object,boolean,String,boolean) throws TypeNotFoundException
   + Relationship newRelationship(String,String,String) throws TypeNotFoundException
   + Resource newTransaction(String,String,String,Object,String,boolean,boolean) 
   + Resource newEvent(String,String,String,Object,String,boolean,boolean) 
}
class FileWallet extends Wallet {
   + string getHomeDirectory() 
   + void constructor(Object,string,Object) 
   + Promise list() 
   + Promise contains(string) 
   + Promise get(string) 
   + Promise add(string,string) 
   + Promise update(string,string) 
   + Promise remove(string) 
}
class IdCard {
   + void constructor(Object,Object) 
   + String getUserName() 
   + String getDescription() 
   + String getBusinessNetworkName() 
   + Object getConnectionProfile() 
   + Object getCredentials() 
   + void setCredentials(Object) 
   + Object getEnrollmentCredentials() 
   + String[] getRoles() 
   + Promise fromArchive() 
   + Promise toArchive(Object,String) 
   + Promise fromDirectory(String,undefined) 
   + Promise toDirectory(String,undefined) 
}
class Introspector {
   + void constructor(ModelManager) 
   + ClassDeclaration[] getClassDeclarations() 
   + ClassDeclaration getClassDeclaration(String) throws Error
}
class Concept extends Typed {
   + boolean isConcept() 
}
class Identifiable extends Typed {
   + string getIdentifier() 
   + void setIdentifier(string) 
   + string getFullyQualifiedIdentifier() 
   + String toString() 
   + boolean isRelationship() 
   + boolean isResource() 
   + String toURI() 
}
class Relationship extends Identifiable {
   + String toString() 
   + boolean isRelationship() 
   + Relationship fromURI(ModelManager,String,String,String) 
}
class Resource extends Identifiable {
   + String toString() 
   + boolean isResource() 
}
class Typed {
   + string getType() 
   + string getFullyQualifiedType() 
   + string getNamespace() 
   + void setPropertyValue(string,string) 
   + void addArrayValue(string,string) 
   + boolean instanceOf(String) 
}
class ValidatedConcept extends Concept {
   + void setPropertyValue(string,string) throws Error
   + void addArrayValue(string,string) throws Error
   + void validate() throws Error
}
class ValidatedResource extends Resource {
   + void setPropertyValue(string,string) throws Error
   + void addArrayValue(string,string) throws Error
   + void validate() throws Error
}
class Serializer {
   + void constructor(Factory,ModelManager) 
   + Object toJSON(Resource,Object,boolean,boolean,boolean,boolean) throws Error
   + Resource fromJSON(Object,Object,boolean,boolean) 
}
class Wallet {
   + Wallet getWallet() 
   + void setWallet(Wallet) 
   + Promise list() 
   + Promise contains(string) 
   + Promise get(string) 
   + Promise add(string,string) 
   + Promise update(string,string) 
   + Promise remove(string) 
}
