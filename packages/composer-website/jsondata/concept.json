{"name":"Concept","commentData":{"description":"<p>\nResource is an instance that has a type. The type of the resource\nspecifies a set of properites (which themselves have types).\n</p>\n<p>\nType information in Composer is used to validate the structure of\nResource instances and for serialization.\n</p>\n<p>\nResources are used in Composer to represent Assets, Participants, Transactions and\nother domain classes that can be serialized for long-term persistent storage.\n</p>","tags":[{"title":"extends","description":null,"type":null,"name":"Identifiable"},{"title":"see","description":"See [Resource]{@link module:composer-common.Resource}"},{"title":"class","description":null,"type":null,"name":null},{"title":"memberof","description":"module:composer-common"}]},"methods":[{"visibility":"+","returnType":"boolean","name":"isConcept","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Determine if this typed is a concept.","tags":[{"title":"return","description":"True if this typed is a concept,\nfalse if not.","type":{"type":"NameExpression","name":"boolean"}}]},"description":["Determine if this typed is a concept."],"parameters":[],"return":{"description":["True if this typed is a concept,","false if not."],"type":"boolean"}}],"superClass":"Typed","description":["<p>","Resource is an instance that has a type. The type of the resource","specifies a set of properites (which themselves have types).","</p>","<p>","Type information in Composer is used to validate the structure of","Resource instances and for serialization.","</p>","<p>","Resources are used in Composer to represent Assets, Participants, Transactions and","other domain classes that can be serialized for long-term persistent storage.","</p>"],"seeAlso":["See [Resource](resource)"],"visibility":"public","extends":"Identifiable","module":"common"}