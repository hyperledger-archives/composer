{"name":"FileWallet","commentData":{"description":"Class implementing a wallet (a container of credentials) that\nstores the credentials on the file system.","tags":[{"title":"protected","description":null}]},"methods":[{"visibility":"+","returnType":"string","name":"getHomeDirectory","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Get the current home directory.","tags":[{"title":"return","description":"The current home directory.","type":{"type":"NameExpression","name":"string"}}]},"description":["Get the current home directory."],"parameters":[],"return":{"description":["The current home directory."],"type":"string"}},{"visibility":"+","returnType":"void","name":"constructor","methodArgs":["Object","string","Object"],"decorators":["param","param","param"],"throws":"","example":"","commentData":{"description":"Constructor.","tags":[{"title":"param","description":"The options to use.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Object"}},"name":"options"},{"title":"param","description":"The directory to store\ncredentials in.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"string"}},"name":"options.directory"},{"title":"param","description":"The file system implementation to use.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Object"}},"name":"fs"}]},"description":["Constructor."],"parameters":[{"description":"The options to use.","type":"Object","name":"options","optional":true},{"description":"The directory to store\ncredentials in.","type":"string","name":"options.directory","optional":true},{"description":"The file system implementation to use.","type":"Object","name":"fs","optional":true}]},{"visibility":"+","returnType":"Promise","name":"list","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"List all of the credentials in the wallet.","tags":[{"title":"return","description":"A promise that is resolved with\nan array of credential names, or rejected with an\nerror.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["List all of the credentials in the wallet."],"parameters":[],"return":{"description":["A promise that is resolved with","an array of credential names, or rejected with an","error."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"contains","methodArgs":["string"],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Check to see if the named credentials are in\nthe wallet.","tags":[{"title":"param","description":"The name of the credentials.","type":{"type":"NameExpression","name":"string"},"name":"name"},{"title":"return","description":"A promise that is resolved with\na boolean; true if the named credentials are in the\nwallet, false otherwise.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Check to see if the named credentials are in","the wallet."],"parameters":[{"description":"The name of the credentials.","type":"string","name":"name","optional":true}],"return":{"description":["A promise that is resolved with","a boolean; true if the named credentials are in the","wallet, false otherwise."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"get","methodArgs":["string"],"decorators":["abstract","param","return"],"throws":"","example":"","commentData":{"description":"Get the named credentials from the wallet.","tags":[{"title":"abstract","description":null},{"title":"param","description":"The name of the credentials.","type":{"type":"NameExpression","name":"string"},"name":"name"},{"title":"return","description":"A promise that is resolved with\nthe named credentials, or rejected with an error.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Get the named credentials from the wallet."],"parameters":[{"description":"The name of the credentials.","type":"string","name":"name","optional":true}],"return":{"description":["A promise that is resolved with","the named credentials, or rejected with an error."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"add","methodArgs":["string","string"],"decorators":["abstract","param","param","return"],"throws":"","example":"","commentData":{"description":"Add a new credential to the wallet.","tags":[{"title":"abstract","description":null},{"title":"param","description":"The name of the credentials.","type":{"type":"NameExpression","name":"string"},"name":"name"},{"title":"param","description":"The credentials.","type":{"type":"NameExpression","name":"string"},"name":"value"},{"title":"return","description":"A promise that is resolved when\ncomplete, or rejected with an error.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Add a new credential to the wallet."],"parameters":[{"description":"The name of the credentials.","type":"string","name":"name","optional":true},{"description":"The credentials.","type":"string","name":"value","optional":true}],"return":{"description":["A promise that is resolved when","complete, or rejected with an error."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"update","methodArgs":["string","string"],"decorators":["abstract","param","param","return"],"throws":"","example":"","commentData":{"description":"Update existing credentials in the wallet.","tags":[{"title":"abstract","description":null},{"title":"param","description":"The name of the credentials.","type":{"type":"NameExpression","name":"string"},"name":"name"},{"title":"param","description":"The credentials.","type":{"type":"NameExpression","name":"string"},"name":"value"},{"title":"return","description":"A promise that is resolved when\ncomplete, or rejected with an error.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Update existing credentials in the wallet."],"parameters":[{"description":"The name of the credentials.","type":"string","name":"name","optional":true},{"description":"The credentials.","type":"string","name":"value","optional":true}],"return":{"description":["A promise that is resolved when","complete, or rejected with an error."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"remove","methodArgs":["string"],"decorators":["abstract","param","return"],"throws":"","example":"","commentData":{"description":"Remove existing credentials from the wallet.","tags":[{"title":"abstract","description":null},{"title":"param","description":"The name of the credentials.","type":{"type":"NameExpression","name":"string"},"name":"name"},{"title":"return","description":"A promise that is resolved when\ncomplete, or rejected with an error.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Remove existing credentials from the wallet."],"parameters":[{"description":"The name of the credentials.","type":"string","name":"name","optional":true}],"return":{"description":["A promise that is resolved when","complete, or rejected with an error."],"type":"Promise"}}],"superClass":"Wallet","description":["Class implementing a wallet (a container of credentials) that","stores the credentials on the file system."],"seeAlso":[],"visibility":"protected"}