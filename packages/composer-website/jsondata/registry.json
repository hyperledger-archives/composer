{"name":"Registry","commentData":{"description":"Class representing an Abstract Registry.\n<p><a href=\"./diagrams/registry.svg\"><img src=\"./diagrams/registry.svg\" style=\"height:100%;\"/></a></p>","tags":[{"title":"abstract","description":null},{"title":"class","description":null,"type":null,"name":null},{"title":"memberof","description":"module:composer-client"}]},"methods":[{"visibility":"+","returnType":"Promise","name":"getAllRegistries","methodArgs":["SecurityContext","string","boolean"],"decorators":["protected","param","param","param","return"],"throws":"","example":"","commentData":{"description":"Get a list of all existing registries.","tags":[{"title":"protected","description":null,"type":null},{"title":"param","description":"The user's security context.","type":{"type":"NameExpression","name":"SecurityContext"},"name":"securityContext"},{"title":"param","description":"The type of this registry.","type":{"type":"NameExpression","name":"string"},"name":"registryType"},{"title":"param","description":"True if system registries should be included (optional default is false)","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"boolean"}},"name":"includeSystem"},{"title":"return","description":"A promise that will be resolved with an array of JSON\nobjects representing the registries.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Get a list of all existing registries."],"parameters":[{"description":"The user's security context.","type":"SecurityContext","name":"securityContext","optional":true},{"description":"The type of this registry.","type":"string","name":"registryType","optional":true},{"description":"True if system registries should be included (optional default is false)","type":"boolean","name":"includeSystem","optional":true}],"return":{"description":["A promise that will be resolved with an array of JSON","objects representing the registries."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"getRegistry","methodArgs":["SecurityContext","string","string"],"decorators":["protected","param","param","param","return"],"throws":"","example":"","commentData":{"description":"Get an existing registry.","tags":[{"title":"protected","description":null,"type":null},{"title":"param","description":"The user's security context.","type":{"type":"NameExpression","name":"SecurityContext"},"name":"securityContext"},{"title":"param","description":"The type of this registry.","type":{"type":"NameExpression","name":"string"},"name":"registryType"},{"title":"param","description":"The unique identifier of the registry.","type":{"type":"NameExpression","name":"string"},"name":"id"},{"title":"return","description":"A promise that will be resolved with a JSON object\nrepresenting the registry.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Get an existing registry."],"parameters":[{"description":"The user's security context.","type":"SecurityContext","name":"securityContext","optional":true},{"description":"The type of this registry.","type":"string","name":"registryType","optional":true},{"description":"The unique identifier of the registry.","type":"string","name":"id","optional":true}],"return":{"description":["A promise that will be resolved with a JSON object","representing the registry."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"existsRegistry","methodArgs":["SecurityContext","string","string"],"decorators":["protected","param","param","param","return"],"throws":"","example":"","commentData":{"description":"Determines whether a registry exists.","tags":[{"title":"protected","description":null,"type":null},{"title":"param","description":"The user's security context.","type":{"type":"NameExpression","name":"SecurityContext"},"name":"securityContext"},{"title":"param","description":"The type of this registry.","type":{"type":"NameExpression","name":"string"},"name":"registryType"},{"title":"param","description":"The unique identifier of the registry.","type":{"type":"NameExpression","name":"string"},"name":"id"},{"title":"return","description":"A promise that will be resolved with true/false depending on whether the registry exists","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Determines whether a registry exists."],"parameters":[{"description":"The user's security context.","type":"SecurityContext","name":"securityContext","optional":true},{"description":"The type of this registry.","type":"string","name":"registryType","optional":true},{"description":"The unique identifier of the registry.","type":"string","name":"id","optional":true}],"return":{"description":["A promise that will be resolved with true/false depending on whether the registry exists"],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"addRegistry","methodArgs":["SecurityContext","string","string","string"],"decorators":["protected","param","param","param","param","return"],"throws":"","example":"","commentData":{"description":"Add a new asset registry.","tags":[{"title":"protected","description":null,"type":null},{"title":"param","description":"The user's security context.","type":{"type":"NameExpression","name":"SecurityContext"},"name":"securityContext"},{"title":"param","description":"The type of this registry.","type":{"type":"NameExpression","name":"string"},"name":"registryType"},{"title":"param","description":"The unique identifier of the registry.","type":{"type":"NameExpression","name":"string"},"name":"id"},{"title":"param","description":"The name of the registry.","type":{"type":"NameExpression","name":"string"},"name":"name"},{"title":"return","description":"A promise that will be resolved with a JSON object\nrepresenting the registry.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Add a new asset registry."],"parameters":[{"description":"The user's security context.","type":"SecurityContext","name":"securityContext","optional":true},{"description":"The type of this registry.","type":"string","name":"registryType","optional":true},{"description":"The unique identifier of the registry.","type":"string","name":"id","optional":true},{"description":"The name of the registry.","type":"string","name":"name","optional":true}],"return":{"description":["A promise that will be resolved with a JSON object","representing the registry."],"type":"Promise"}},{"visibility":"+","returnType":"void","name":"constructor","methodArgs":["string","string","string","SecurityContext","ModelManager","Factory","Serializer","BusinessNetworkConnection"],"decorators":["link","protected","param","param","param","param","param","param","param","param"],"throws":"","example":"","commentData":{"description":"Create a registry.\n\n<strong>Note: Only to be called by framework code. Applications should\nretrieve instances from {@link BusinessNetworkConnection}</strong>\n</p>","tags":[{"title":"protected","description":null,"type":null},{"title":"param","description":"The type of this registry.","type":{"type":"NameExpression","name":"string"},"name":"registryType"},{"title":"param","description":"The unique identifier of the registry.","type":{"type":"NameExpression","name":"string"},"name":"id"},{"title":"param","description":"The display name for the registry.","type":{"type":"NameExpression","name":"string"},"name":"name"},{"title":"param","description":"The users security context.","type":{"type":"NameExpression","name":"SecurityContext"},"name":"securityContext"},{"title":"param","description":"The ModelManager to use for this registry.","type":{"type":"NameExpression","name":"ModelManager"},"name":"modelManager"},{"title":"param","description":"The factory to use for this registry.","type":{"type":"NameExpression","name":"Factory"},"name":"factory"},{"title":"param","description":"The Serializer to use for this registry.","type":{"type":"NameExpression","name":"Serializer"},"name":"serializer"},{"title":"param","description":"Instance of the BusinessNetworkConnection\nTODO: Rationalize the bnc with the other objects - as the bnc contains these other arguments","type":{"type":"NameExpression","name":"BusinessNetworkConnection"},"name":"bnc"}]},"description":["Create a registry.","","<strong>Note: Only to be called by framework code. Applications should","retrieve instances from {@link BusinessNetworkConnection}</strong>","</p>"],"parameters":[{"description":"The type of this registry.","type":"string","name":"registryType","optional":true},{"description":"The unique identifier of the registry.","type":"string","name":"id","optional":true},{"description":"The display name for the registry.","type":"string","name":"name","optional":true},{"description":"The users security context.","type":"SecurityContext","name":"securityContext","optional":true},{"description":"The ModelManager to use for this registry.","type":"ModelManager","name":"modelManager","optional":true},{"description":"The factory to use for this registry.","type":"Factory","name":"factory","optional":true},{"description":"The Serializer to use for this registry.","type":"Serializer","name":"serializer","optional":true},{"description":"Instance of the BusinessNetworkConnection\nTODO: Rationalize the bnc with the other objects - as the bnc contains these other arguments","type":"BusinessNetworkConnection","name":"bnc","optional":true}]},{"visibility":"+","returnType":"Promise","name":"addAll","methodArgs":["Resource[]"],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Adds a list of new resources to the registry.","tags":[{"title":"param","description":"The resources to be added to the registry.","type":{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array"},"applications":[{"type":"NameExpression","name":"Resource"}]},"name":"resources"},{"title":"return","description":"A promise that will be resolved when the resource is\nadded to the registry.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Adds a list of new resources to the registry."],"parameters":[{"description":"The resources to be added to the registry.","name":"resources","optional":true}],"return":{"description":["A promise that will be resolved when the resource is","added to the registry."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"add","methodArgs":["Resource"],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Adds a new resource to the registry.","tags":[{"title":"param","description":"The resource to be added to the registry.","type":{"type":"NameExpression","name":"Resource"},"name":"resource"},{"title":"return","description":"A promise that will be resolved when the resource is\nadded to the registry.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Adds a new resource to the registry."],"parameters":[{"description":"The resource to be added to the registry.","type":"Resource","name":"resource","optional":true}],"return":{"description":["A promise that will be resolved when the resource is","added to the registry."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"updateAll","methodArgs":["Resource[]"],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Updates a list of resources in the registry.","tags":[{"title":"param","description":"The resources to be updated in the asset registry.","type":{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array"},"applications":[{"type":"NameExpression","name":"Resource"}]},"name":"resources"},{"title":"return","description":"A promise that will be resolved when the resource is\nadded to the registry.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Updates a list of resources in the registry."],"parameters":[{"description":"The resources to be updated in the asset registry.","name":"resources","optional":true}],"return":{"description":["A promise that will be resolved when the resource is","added to the registry."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"update","methodArgs":["Resource"],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Updates a resource in the registry.","tags":[{"title":"param","description":"The resource to be updated in the registry.","type":{"type":"NameExpression","name":"Resource"},"name":"resource"},{"title":"return","description":"A promise that will be resolved when the resource is\nupdated in the registry.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Updates a resource in the registry."],"parameters":[{"description":"The resource to be updated in the registry.","type":"Resource","name":"resource","optional":true}],"return":{"description":["A promise that will be resolved when the resource is","updated in the registry."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"removeAll","methodArgs":[],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Removes a list of resources from the registry.","tags":[{"title":"param","description":"The resources, or the unique identifiers of the resources.","type":{"type":"UnionType","elements":[{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array"},"applications":[{"type":"NameExpression","name":"Resource"}]},{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array"},"applications":[{"type":"NameExpression","name":"string"}]}]},"name":"resources"},{"title":"return","description":"A promise that will be resolved when the resource is\nadded to the registry.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Removes a list of resources from the registry."],"parameters":[{"description":"The resources, or the unique identifiers of the resources.","name":"resources","optional":true}],"return":{"description":["A promise that will be resolved when the resource is","added to the registry."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"remove","methodArgs":[],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Remove an asset with a given type and id from the registry.","tags":[{"title":"param","description":"The resource, or the unique identifier of the resource.","type":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Resource"},{"type":"NameExpression","name":"string"}]},"name":"resource"},{"title":"return","description":"A promise that will be resolved when the resource is\nremoved from the registry.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Remove an asset with a given type and id from the registry."],"parameters":[{"description":"The resource, or the unique identifier of the resource.","name":"resource","optional":true}],"return":{"description":["A promise that will be resolved when the resource is","removed from the registry."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"getAll","methodArgs":[],"decorators":["return"],"throws":"","example":"","commentData":{"description":"Get all of the resources in the registry.","tags":[{"title":"return","description":"A promise that will be resolved with an array of JSON\nobjects representing the resources.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Get all of the resources in the registry."],"parameters":[],"return":{"description":["A promise that will be resolved with an array of JSON","objects representing the resources."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"get","methodArgs":["string"],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Get a specific resource in the registry.","tags":[{"title":"param","description":"The unique identifier of the resource.","type":{"type":"NameExpression","name":"string"},"name":"id"},{"title":"return","description":"A promise that will be resolved with a JSON object\nrepresenting the resource.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Get a specific resource in the registry."],"parameters":[{"description":"The unique identifier of the resource.","type":"string","name":"id","optional":true}],"return":{"description":["A promise that will be resolved with a JSON object","representing the resource."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"exists","methodArgs":["string"],"decorators":["param","return"],"throws":"","example":"","commentData":{"description":"Determines whether a specific resource exists in the registry.","tags":[{"title":"param","description":"The unique identifier of the resource.","type":{"type":"NameExpression","name":"string"},"name":"id"},{"title":"return","description":"A promise that will be resolved with true/false depending on whether the resource exists.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Determines whether a specific resource exists in the registry."],"parameters":[{"description":"The unique identifier of the resource.","type":"string","name":"id","optional":true}],"return":{"description":["A promise that will be resolved with true/false depending on whether the resource exists."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"resolveAll","methodArgs":[],"decorators":["link","link","return"],"throws":"","example":"","commentData":{"description":"Get all of the resources in the registry, and resolve all of their relationships\nto other assets, participants, and transactions. The result is a JavaScript\nobject, and should only be used for visualization purposes. You cannot use\nthe {@link add} or {@link update} functions with a resolved resource.","tags":[{"title":"return","description":"A promise that will be resolved with an array of JavaScript\nobjects representing the resources and all of their resolved relationships.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Get all of the resources in the registry, and resolve all of their relationships","to other assets, participants, and transactions. The result is a JavaScript","object, and should only be used for visualization purposes. You cannot use","the {@link add} or {@link update} functions with a resolved resource."],"parameters":[],"return":{"description":["A promise that will be resolved with an array of JavaScript","objects representing the resources and all of their resolved relationships."],"type":"Promise"}},{"visibility":"+","returnType":"Promise","name":"resolve","methodArgs":["string"],"decorators":["link","link","param","return"],"throws":"","example":"","commentData":{"description":"Get a specific resource in the registry, and resolve all of its relationships\nto other assets, participants, and transactions. The result is a JavaScript\nobject, and should only be used for visualization purposes. You cannot use\nthe {@link add} or {@link update} functions with a resolved resource.","tags":[{"title":"param","description":"The unique identifier of the asset.","type":{"type":"NameExpression","name":"string"},"name":"id"},{"title":"return","description":"A promise that will be resolved with a JavaScript object\nrepresenting the resource and all of its resolved relationships.","type":{"type":"NameExpression","name":"Promise"}}]},"description":["Get a specific resource in the registry, and resolve all of its relationships","to other assets, participants, and transactions. The result is a JavaScript","object, and should only be used for visualization purposes. You cannot use","the {@link add} or {@link update} functions with a resolved resource."],"parameters":[{"description":"The unique identifier of the asset.","type":"string","name":"id","optional":true}],"return":{"description":["A promise that will be resolved with a JavaScript object","representing the resource and all of its resolved relationships."],"type":"Promise"}}],"description":["Class representing an Abstract Registry.","<p><a href=\"./diagrams/registry.svg\"><img src=\"./diagrams/registry.svg\" style=\"height:100%;\"/></a></p>"],"seeAlso":[],"visibility":"public","module":"client"}